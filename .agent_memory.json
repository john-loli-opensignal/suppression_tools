{
  "streamlit_api_changes": {
    "use_container_width_deprecation": {
      "date": "2025-10-05",
      "change": "Streamlit 1.50.0 deprecated use_container_width parameter",
      "fix": "Replace use_container_width=True with width='stretch', use_container_width=False with width='content'",
      "affected_methods": [
        "st.plotly_chart()",
        "st.dataframe()"
      ],
      "commit": "33263dc"
    }
  },
  "critical_fixes": {
    "windstream_suppression_bug": {
      "date": "2025-10-05",
      "problem": "Windstream had 437 wins to remove but only 37 were suppressed (8.5%)",
      "root_cause": "Hardcoded 5-win minimum for auto suppression was too high for carriers with many small DMA pairs (1-2 wins each)",
      "solution": "Made auto_min_wins configurable (slider, default: 2). Lowered distributed_min_wins default to 1.",
      "key_insight": "Different carriers have different pair distributions. Large carriers (AT&T) have concentrated pairs (100+ wins). Small carriers (Windstream) have distributed pairs (1-5 wins). Hardcoded thresholds fail for one or the other.",
      "commit": "c520b1c",
      "file": "analysis/windstream_debug_analysis.md"
    }
  },
  "suppression_thresholds": {
    "auto_min_wins": {
      "default": 2,
      "range": "1-20",
      "purpose": "Minimum current wins for a pair to be eligible for auto suppression (outliers, first appearance, rare pairs)",
      "guidance": "Lower for small carriers with distributed volume (Windstream, Hughes). Keep at 2-5 for large carriers."
    },
    "distributed_min_wins": {
      "default": 1,
      "range": "1-50",
      "purpose": "Minimum current wins for a pair to receive distributed suppression",
      "guidance": "Keep at 1 to ensure all pairs can participate in distribution. Raise to 2-5 if you want to ignore very small pairs."
    },
    "z_threshold": {
      "default": 2.5,
      "range": "0.5-5.0",
      "purpose": "Z-score threshold for statistical outliers",
      "guidance": "2.5 is standard (99% confidence). Lower to 1.5-2.0 for more aggressive suppression."
    },
    "egregious_threshold": {
      "default": 40,
      "range": "10-100",
      "purpose": "Flag outliers outside top-N carriers if impact exceeds this",
      "guidance": "40 wins is ~5% of typical daily volume. Catches major anomalies even in tail carriers."
    }
  },
  "carrier_characteristics": {
    "large_concentrated": {
      "examples": [
        "AT&T",
        "Verizon",
        "T-Mobile",
        "Spectrum"
      ],
      "pair_pattern": "Few DMAs, high volume per pair (50-200 wins)",
      "outlier_pattern": "Single pair spikes dominate national outliers",
      "threshold_recommendations": {
        "auto_min_wins": "2-5",
        "distributed_min_wins": "5-10"
      }
    },
    "small_distributed": {
      "examples": [
        "Windstream",
        "Hughes",
        "Consolidated"
      ],
      "pair_pattern": "Many DMAs, low volume per pair (1-5 wins)",
      "outlier_pattern": "National outliers from cumulative effect of many small pair spikes",
      "threshold_recommendations": {
        "auto_min_wins": "1-2",
        "distributed_min_wins": "1"
      }
    }
  },
  "preagg_version_support": {
    "v0.3": {
      "name": "v2.1 Production",
      "census_vintage": 2010,
      "path_pattern": "~/tmp/platform_pre_aggregate_v_0_3/{ds}/{date}/{uuid}/",
      "database_file": "data/databases/duck_suppression_v_2_1_prod.db",
      "crosswalk": "ref/d_census_block_crosswalk/5bb9481d-6e03-4802-a965-8a5242e74d65/",
      "blockid_col": "census_blockid",
      "crosswalk_join_key": "serv_terr_blockid",
      "has_ds_column": true,
      "has_partitioning_cols": false,
      "total_columns": 21,
      "notes": "2010 census blocks, may need ds inference if column missing"
    },
    "v15.0": {
      "name": "Current Production",
      "census_vintage": 2020,
      "path_pattern": "~/tmp/platform_pre_agg_v_15_0/{date}/{uuid}/",
      "database_file": "data/databases/duck_suppression.db",
      "crosswalk": "ref/cb_cw_2020/90226c5d-f3bf-47eb-963a-e03545c972bd/",
      "blockid_col": "primary_geoid",
      "crosswalk_join_key": "census_blockid",
      "has_ds_column": true,
      "has_partitioning_cols": true,
      "total_columns": 35,
      "notes": "2020 census blocks, current default"
    },
    "cross_version_notes": {
      "safe_comparisons": ["DMA level", "State level", "National level", "Carrier metrics"],
      "unsafe_comparisons": ["Census block level (different geographies)"],
      "cube_compatibility": "Cubes work with both versions (normalized schema)",
      "dashboard_compatibility": "Dashboards work with both (just change DB path)"
    }
  },
  "outlier_detection": {
    "two_different_algorithms": {
      "carrier_dashboard_duckdb": {
        "function": "db.national_outliers_from_cube()",
        "day_grouping": "3 types (Sat/Sun/Weekday)",
        "window_strategy": "Fixed single window (e.g., 14 days)",
        "rolling_scope": "Within specified window only",
        "carrier_scope": "All carriers",
        "use_case": "Exploratory analysis, fast visualization",
        "location": "tools/db.py::national_outliers_from_cube()"
      },
      "main_py_suppression_tool": {
        "function": "scan_base_outliers()",
        "day_grouping": "7 types (DOW 1-7 for each day of week)",
        "window_strategy": "Tiered: tries 28d → 14d → 4d based on data availability",
        "rolling_scope": "Entire time series, then filter to graph window",
        "carrier_scope": "Top N carriers + egregious outliers (impact > threshold)",
        "additional_filters": "Optional minimum share % threshold",
        "use_case": "Production suppression planning, robust to sparse data",
        "location": "tools/src/plan.py::scan_base_outliers()"
      },
      "why_different_results": "Intentional - they serve different purposes. carrier_dashboard for exploration, main.py for production suppression.",
      "alignment_not_needed": "Recommended to keep them different"
    },
    "configurable_thresholds": {
      "national_level": {
        "z_score": {
          "default": 2.5,
          "range": "0.5 to 5.0",
          "location": "main.py sidebar slider: 'National Z-Score Threshold'"
        },
        "egregious_impact": {
          "default": 40,
          "range": "10 to 100",
          "description": "Flags outliers outside top N",
          "location": "main.py sidebar slider: 'Egregious Impact'"
        }
      },
      "dma_pair_level": {
        "z_score": {
          "default": 1.5,
          "range": "0.5 to 5.0",
          "location": "main.py sidebar slider: 'DMA Z-Score Threshold'",
          "usage": "build_enriched_cube(dma_z_threshold=...)"
        },
        "pct_change": {
          "default": 30.0,
          "range": "10.0 to 100.0",
          "location": "main.py sidebar slider: 'DMA % Change Threshold'",
          "usage": "build_enriched_cube(dma_pct_threshold=...)"
        },
        "rare_pair_impact": {
          "default": 15,
          "range": "5 to 50",
          "description": "Minimum impact for rare pairs (appearance_rank <= 5)",
          "location": "main.py sidebar slider: 'Rare Pair Impact'",
          "usage": "build_enriched_cube(rare_pair_impact_threshold=...)"
        }
      }
    },
    "dow_aware_rolling_windows": {
      "tiered_logic": {
        "28d_window": "Weekday: needs 4+ DOW samples, Weekend: needs 2+ DOW samples",
        "14d_window": "Same requirements as fallback",
        "4d_window": "Minimum threshold as last resort",
        "description": "Tries longest window first, falls back to shorter if insufficient data"
      },
      "dow_definition": "1=Sunday, 2=Monday, ..., 7=Saturday (DuckDB DAYOFWEEK())",
      "verified": "Aug 3, 2025 is Sunday (dow=1) ✅"
    }
  }
}
